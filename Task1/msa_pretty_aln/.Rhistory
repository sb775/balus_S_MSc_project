showConsensus="bottom", logoColors="rasmol",
verbose=FALSE, askForOverwrite=FALSE )
print(myFirstAlignment, show="complete")
## Resulting LaTeX code with default settings
msaPrettyPrint(myFirstAlignment, output="pdf", showNames="none",
showLogo="none", askForOverwrite=FALSE, verbose=FALSE)
msaPrettyPrint(myFirstAlignment, y=c(164, 213), output="asis",showNames="none",
showLogo="none", askForOverwrite=FALSE)
myFirstAlignment.pdf
myClustalOmegaAlignment <- msa(mySequences, "ClustalOmega")
myClustalOmegaAlignment
print(myFirstAlignment, showNames=FALSE, show="complete")
myMaskedAlignment <- myFirstAlignment
colM <- IRanges(start=1, end=100)
colmask(myMaskedAlignment) <- colM
myMaskedAlignment
unmasked(myMaskedAlignment)
conMat <- consensusMatrix(myFirstAlignment)
dim(conMat)
conMat[, 101:110]
install.packages("latexpdf")
msaPrettyPrint(myFirstAlignment, output="asis", y=c(164, 213),subset=c(1:6),
showNames="none", showLogo="none",consensusColor="ColdHot",
showLegend=FALSE,askForOverwrite=FALSE)
msaPrettyPrint(myFirstAlignment, output="pdf", y=c(164, 213),subset=c(1:6),
showNames="none", showLogo="none",consensusColor="ColdHot",
showLegend=FALSE,askForOverwrite=FALSE)
msaPrettyPrint(myFirstAlignment, output="pdf", showNames="none",showLogo="none",
askForOverwrite=FALSE, verbose=FALSE)
msaPrettyPrint(myFirstAlignment, output="asis", showNames="none",showLogo="none",
askForOverwrite=FALSE, verbose=FALSE)
texi2pdf(seq325028046319, clean = FALSE, quiet = TRUE,
texi2dvi = getOption("texi2dvi"),
texinputs = NULL, index = TRUE)
msaPrettyPrint(myFirstAlignment, output="asis", showNames="none",showLogo="none",
askForOverwrite=FALSE, verbose=FALSE)
msaPrettyPrint(myFirstAlignment, y=c(164, 213), output="asis",showNames="none",
showLogo="none", askForOverwrite=FALSE)
mySequences
mySequenceFile <- system.file("examples", "exampleAA.fasta", package="msa")
mySequences <- readAAStringSet(mySequenceFile)
## Clustal W with default paramters
myFirstAlignment <- msa(mySequences)
myFirstAlignment
msaPrettyPrint(myFirstAlignment, output="asis", showNames="none",showLogo="none",
askForOverwrite=FALSE, verbose=FALSE)
msaPrettyPrint(myFirstAlignment, y=c(164, 213), output="asis",showNames="none",
showLogo="none", askForOverwrite=FALSE)
myFirstAlignment
?msaPrettyPrint
##asis - no output file
msaPrettyPrint(myFirstAlignment, output="asis", showNames="none",showLogo="none",
askForOverwrite=FALSE, verbose=FALSE)
msaPrettyPrint(myFirstAlignment, y=c(164, 213), output="pdf",showNames="none",
showLogo="none", askForOverwrite=FALSE)
msaPrettyPrint(myFirstAlignment, y=c(164, 213), output=".pdf",showNames="none",
showLogo="none", askForOverwrite=FALSE)
msaPrettyPrint(myFirstAlignment, y=c(164, 213), output="pdf",showNames="none",
showLogo="none", askForOverwrite=FALSE)
##asis - no output file
msaPrettyPrint(myFirstAlignment, output="asis", showNames="none",showLogo="none",
askForOverwrite=FALSE)
msaPrettyPrint(myFirstAlignment, y=c(164, 213), output="pdf",showNames="none",
showLogo="none", askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir=".",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbode=FALSE,askForOverwrite=FALSE)
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
myFirstAlignment
?msaPrettyPrint
library(Biobase)
openPDF(tmpFile)
install.packages("Biobase")
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
setwd("~/MSc_project_R")
mySequences <- readAAStringSet(mySequenceFile)
mySequences
## Clustal W with default paramters
myFirstAlignment <- msa(mySequences)
myFirstAlignment
##asis - no output file
msaPrettyPrint(myFirstAlignment, output="asis", showNames="none",showLogo="none",
askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir=".",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
tmpdir = tempdir()
tmpdir
tmpdir = "."
tmpdir
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir=".",fileext=".pdf")
tmpFile
tmpdir
tmpdir = tempdir()
tmpdir
pwd
cwd
getwd
wd = getwd()
wd
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir=getwd(),fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:/Users/b/Documents/MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
install.packages("latexpdf")
install.packages("latexpdf")
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("msa", force=TRUE)
## Clustal W with default paramters
myFirstAlignment <- msa(mySequences)
myFirstAlignment
##asis - no output file
msaPrettyPrint(myFirstAlignment, output="asis", showNames="none",showLogo="none",
askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##asis - no output file
msaPrettyPrint(myFirstAlignment, output="tex", showNames="none",showLogo="none",
askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
myFirstAlignment
install.packages("tinytex")
library(tinytex)
library(latexpdf)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##asis - no output file
tex = msaPrettyPrint(myFirstAlignment, output="tex", showNames="none",showLogo="none",
askForOverwrite=FALSE)
tex
tex2pdf(tex)
tex
file <- file.path(tempdir(),'test.tex')
writeLines(tex, file)
tex2pdf(file)
tinytex::install_tinytex()
remove.packages("latexpdf", lib="~/R/R-4.0.5/library")
##asis - no output file
msaPrettyPrint(myFirstAlignment, output="tex", showNames="none",showLogo="none",
askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
tinytex::install_tinytex()
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##asis - no output file
msaPrettyPrint(myFirstAlignment, output="tex", showNames="none",showLogo="none",
askForOverwrite=FALSE)
library(msa)
## Example file from msa package
system.file("tex", "texshade.sty", package="msa")
mySequenceFile <- system.file("examples", "exampleAA.fasta", package="msa")
mySequences <- readAAStringSet(mySequenceFile)
mySequences
## Clustal W with default paramters
myFirstAlignment <- msa(mySequences)
myFirstAlignment
##asis - no output file
msaPrettyPrint(myFirstAlignment, output="tex", showNames="none",showLogo="none",
askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##asis - no output file
msaPrettyPrint(myFirstAlignment, output="asis", showNames="none",showLogo="none",
askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
library(tinytex)
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
tinytex::install_tinytex()
tinytex::uninstall_tinytex()
detach("package:tinytex", unload = TRUE)
tinytex::uninstall_tinytex()
tinytex::install_tinytex()
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
tinytex::uninstall_tinytex()
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
##"C:\\Users\\b\\Documents\\MSc_project_R"
tmpFile <- tempfile(pattern="msa",tmpdir=".",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
##"C:\\Users\\b\\Documents\\MSc_project_R"
tmpFile <- tempfile(pattern="msa",tmpdir=tempdir(),fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
library(tinytex)
tinytex::install_tinytex()
tinytex::reinstall_tinytex()
##Create PDF file (help menu)
##"C:\\Users\\b\\Documents\\MSc_project_R"
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
##"C:\\Users\\b\\Documents\\MSc_project_R"
tmpFile <- tempfile(pattern="msa",tmpdir=".",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
##"C:\\Users\\b\\Documents\\MSc_project_R"
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
tmpFile
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
sessionInfo()
library(readxl)
sequence_info_VDJbase_130521 <- read_excel("C:/Users/b/Desktop/Suchu/MSc_projects/Data_downloads/sequence_info_VDJbase_130521.csv")
View(sequence_info_VDJbase_130521)
library(readr)
sequence_info_VDJbase_130521 <- read_csv("C:/Users/b/Desktop/Suchu/MSc_projects/Data_downloads/sequence_info_VDJbase_130521.csv")
View(sequence_info_VDJbase_130521)
library(Biostrings)
DataFrame(sequence_info_VDJbase_130521)
VDJbase_matrix <- cbind(name, gene_name, seq)
VDJbase_df <- data.frame(sequence_info_VDJbase_130521)
VDJvase_df
VDJbase_df
VDJbase_df <- VDJbase_df[1,2,3]
VDJbase_df
VDJbase_df <- VDJbase_df[1,]
VDJbase_df <- VDJbase_df[1, ]
VDJbase_df <- VDJbase_df[1,3]
VDJbase$name,gene_name,seq
VDJbase$name
VDJbase_df$name
VDJbase_df$[1]
VDJbase_df$["1"]
VDJbase_df <- data.frame(sequence_info_VDJbase_130521)
VDJbase_df["name","gene_name","seq"]
VDJbase_df <- DataFrame(sequence_info_VDJbase_130521)
VDJbase_df["name","gene_name","seq"]
VDJbase_df[1,]
VDJbase_df[,1]
VDJbase_df[,1-3]
VDJbase_df[,1][,2][,3]
VDJbase_df[,1]
VDJbase_df[,2]
VDJbase_df[,3]
DNA_seq <- VDJbase_df[,3]
AA_string <- DNAString(x="DNA_seq",start=1,nchar=NA)
df$aa <- translate(DNAStringSet(VDJbasedf$seq))
library(Biostrings)
VDJbase_df <- DataFrame(sequence_info_VDJbase_130521)
library(readr)
sequence_info_VDJbase_130521 <- read_csv("C:/Users/b/Desktop/Suchu/MSc_projects/Data_downloads/sequence_info_VDJbase_130521.csv")
View(sequence_info_VDJbase_130521)
VDJbase_df <- DataFrame(sequence_info_VDJbase_130521)
View(sequence_info_VDJbase_130521)
DNA_seq <- VDJbase_df[,3]
AA_string <- DNAString(x="DNA_seq",start=1,nchar=NA)
df$aa <- translate(DNAStringSet(VDJbasedf$seq))
df$aa <- translate(DNAStringSet(VDJbase_df$seq))
library(Biostrings)
##test translate
dna1 <- DNAString("TTGATATGGCCCTTATAA")
translate(dna1)
VDJbase_dataset130521 <- read.table("C:/Users/b/Desktop/Suchu/MSc_projects/Data_downloads/VDJbase_dataset130521.fasta", quote="\"", comment.char="")
View(VDJbase_dataset130521)
read.fasta(file = VDJbase_dataset130521, as.string = TRUE, forceDNAtolower = FALSE)
library(seqinR)
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("seqinR", force=TRUE)
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("seqinr", force=TRUE)
##test translate
dna1 <- DNAString("TTGATATGGCCCTTATAA")
translate(dna1)
read.fasta(file = VDJbase_dataset130521, as.string = TRUE, forceDNAtolower = FALSE)
getwd
readDNAStringSet(VDJbase_dataset130521, format="fasta")
readDNAStringSet(sequence_info_VDJbase_130521, format="fasta")
library(readr)
VDJbase_df <- read_csv("C:/Users/b/Desktop/Suchu/MSc_projects/Data_downloads/sequence_info_VDJbase_130521.csv")
readDNAStringSet(sequence_info_VDJbase_130521, format="fasta")
readDNAStringSet(VDJbase_df, format="fasta")
#View(sequence_info_VDJbase_130521)
DNA_seq <- VDJbase_df[,3]
readDNAStringSet(DNA_seq, format="fasta")
aa_tempstr = (str(seq_record.translate())) ## translate
aa_tempstr = (translate('VDJbase_dataset130521.fasta'))) ## translate
aa_tempstr = (translate('VDJbase_dataset130521.fasta')) ## translate
source('~/.active-rstudio-document')
for seq1 in seqinr::('VDJbase_dataset130521.fasta', 'fasta'):
temp_record_id = seq_record.id.split("|")
source('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
source('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
debugSource('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
debugSource('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
debugSource('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
source('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
library(BiocManager)
uninstall::tinytex
uninstall_tinytex()
source('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
debugSource('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
debugSource('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
debugSource('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
source('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
##asis - no output file
tx <- msaPrettyPrint(myFirstAlignment, output="tex", showNames="none",showLogo="none",
askForOverwrite=FALSE)
tx
##asis - no output file
tx <- msaPrettyPrint(myFirstAlignment, output="tex",
askForOverwrite=FALSE)
tx
##Create PDF file (help menu)
##"C:\\Users\\b\\Documents\\MSc_project_R"
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".txt")
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="tex",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
##"C:\\Users\\b\\Documents\\MSc_project_R"
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".tex")
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="tex",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
##Create PDF file (help menu)
##"C:\\Users\\b\\Documents\\MSc_project_R"
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".pdf")
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="pdf",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
## Example file from msa package
inp_file = 'C:\\Users\\b\\Desktop\\Suchu\\MSc_projects\\Code\\fasta\\IGHV1-2_out.fasta'
#mySequences <- readAAStringSet(inp_file)
ighv1-2 <- readAAStringSet(inp_file)
#mySequences <- readAAStringSet(inp_file)
ighv1-2 <- readAAStringSet(inp_file)
#mySequences <- readAAStringSet(inp_file)
ighv1_2 <- readAAStringSet(inp_file)
## Clustal W with default paramters
myFirstAlignment <- msa(ighv1-2, "ClustalW")
## Clustal W with default paramters
myFirstAlignment <- msa(ighv1_2, "ClustalW")
##Create PDF file (help menu)
##"C:\\Users\\b\\Documents\\MSc_project_R"
tmpFile <- tempfile(pattern="msa",tmpdir="C:\\Users\\b\\Documents\\MSc_project_R",fileext=".tex")
msaPrettyPrint(myFirstAlignment, file=tmpFile, output="tex",showNames="left",
showLogo="top",showConsensus = "bottom",logoColors = "rasmol",
verbose=FALSE,askForOverwrite=FALSE)
source('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
.libPaths()
source('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
source('C:/Users/b/Desktop/Suchu/MSc_projects/Code/Task1.r')
library(feather)
path <- '/Users/b/Desktop/Suchu/MSc_projects/Code/ma_db_v1.feather'
mult_allele_df <- feather(path)
path <- '/Users/b/Desktop/Suchu/MSc_projects/Code/mult_alleles.feather'
mult_allele_df <- feather(path)
mult_allele_df <- arow::read_feather(path)
mult_allele_df <- arrow::read_feather(path)
install.packages("arrow")
path <- '/Users/b/Desktop/Suchu/MSc_projects/Code/mult_alleles.feather'
mult_allele_df <- arrow::read_feather(path)
mult_allele_df
path <- '/Users/b/Desktop/Suchu/MSc_projects/Code/mult_alleles.feather'
mult_allele_df <- arrow::read_feather(path)
mult_allele_df
library(arrow)
library(arrow)
path <- '/Users/b/Desktop/Suchu/MSc_projects/Code/mult_alleles.feather'
mult_allele_df <- arrow::read_feather(path)
mult_allele_df
path <- '/Users/b/Desktop/Suchu/MSc_projects/Code/mult_alleles.feather'
mult_allele.set_index()
path <- '/Users/b/Desktop/Suchu/MSc_projects/Code/mult_alleles.feather'
mult_allele_df <- arrow::read_feather(path)
mult_allele_df
library(arrow)
path <- '/Users/b/Desktop/Suchu/MSc_projects/Code/mult_alleles.feather'
mult_allele_df <- arrow::read_feather(path)
mult_allele_df
path <- '/Users/b/Desktop/Suchu/MSc_projects/Code/mult_alleles.feather'
mult_allele_df <- arrow::read_feather(path)
mult_allele_df
#if (!requireNamespace("BiocManager", quietly=TRUE))
#  install.packages("BiocManager")
#BiocManager::install("msa", force=TRUE)
library(msa)
#set the working directory from which the files will be read from
setwd('C:/Users/b/Desktop/Suchu/MSc_projects/Code/msa_pretty_aln')
#create a list of the files from target directory
input_path <- 'C:/Users/b/Desktop/Suchu/MSc_projects/Code/fasta/'
output_path <- 'C:/Users/b/Desktop/Suchu/MSc_projects/Code/msa_pretty_aln/'
file_list <- list.files(path = input_path, '.fasta')
